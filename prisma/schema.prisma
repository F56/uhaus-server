// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("LET_DATABASE_URL")
}

model User {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  email      String   @unique
  password   String
  name       String
  mobile     String
  country    String
  city       String
  university String
  rooms      Room[]
  reviews    Review[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Room {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  title           String
  description     String
  published       Boolean
  owner           User      @relation(fields: [ownerId], references: [id])
  ownerId         String
  images          Image[]
  rules           Rule[]
  amenities       Amenity[]
  country         String
  city            String
  address         String
  university      String
  onlyStudents    Boolean
  price           Int
  priceNegotiable Boolean
  reviews         Review[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Image {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  url       String
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Rule {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Amenity {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  rating    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  room      Room     @relation(fields: [roomId], references: [id])
  roomId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
